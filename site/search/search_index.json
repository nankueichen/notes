{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Links","text":"<p><code>2024-01-08</code></p> <ul> <li>3T scanner schedule</li> <li>Bernard Pras' work</li> <li>HPC at U of A</li> <li>codingrooms.com</li> </ul>"},{"location":"_index/","title":"using mkdocs","text":"<p><code>2023-11-15</code></p> <p>I followed this real python webpage to set up my mkdocs. The highlights are:</p> <ol> <li>Everthing is located here: Dropbox/mkdocs</li> <li>Using virtual environment:<ul> <li><code>python3 -m venv venv</code></li> <li><code>source venv/bin/activate</code></li> </ul> </li> <li>Installing python modules:<ul> <li><code>python -m pip install mkdocs</code></li> <li><code>python -m pip install \"mkdocstrings[python]\"</code></li> <li><code>python -m pip install mkdocs-material</code></li> </ul> </li> <li>Pin the dependence<ul> <li><code>python -m pip freeze &gt; requirements.txt</code> (see here)</li> </ul> </li> <li>Create a new mkdocs folder notes and organize the files there<ul> <li><code>mkdocs new notes</code></li> <li>I then edited the automatically produced file mkdocs.yml</li> <li>In the future I could add more *md files to the docs folder and update the index.md</li> </ul> </li> <li>Start the live-reloading docs server<ul> <li><code>mkdocs serve</code></li> </ul> </li> <li>Optionally Build the documentation site<ul> <li><code>mkdocs build</code> </li> </ul> </li> <li>more information in mkdocs.org. Also Print help message and exit<ul> <li><code>mkdocs -h</code></li> </ul> </li> <li> <p>To back up files in github: </p> <ul> <li><code>git init</code></li> <li><code>git remote add origin https://github.com/&lt;user name&gt;/notes.git</code></li> <li><code>git add .</code></li> <li><code>git commit -m \"Add documentation\"</code></li> <li><code>git branch -M main</code></li> <li><code>git push -u origin main</code> or using github Desktop to push</li> <li>Following these instructions I could add a github workflow. Afterward, in setting / Pages of the github folder, I change the Branch to main and location to /doc ; Afterward the github site is up and running.</li> <li>I then add .readthedocs.yaml and requirements.txt so that the document can be built in readthedocs.io website.</li> </ul> </li> <li> <p>To host the static website on digitalocean, I followed this instruction.</p> </li> </ol> <p>Try the math here \\(\\alpha\\), \\(\\gamma\\)</p>"},{"location":"asl_denoising/","title":"writing ASL denoising paper","text":"<p><code>2024-01-08</code></p>"},{"location":"asl_denoising/#file-locations","title":"file locations:","text":"<ul> <li><code>Dropbox/now/writing ASL denoising paper</code></li> <li><code>Dropbox/now/ASL data processing/20200424_Heather_data_processing</code></li> <li><code>Dropbox/now/ASL data processing/Heather_ASL-fMRI</code></li> <li><code>Dropbox/now/ASL paper</code></li> </ul>"},{"location":"asl_denoising/#two-apporoaches-for-writing-this-paper","title":"Two apporoaches for writing this paper:","text":"<ul> <li> <p>First, this could be an extension of a series of denoising papers:</p> <ul> <li>https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0195952</li> <li>https://pubmed.ncbi.nlm.nih.gov/29877094/</li> <li>https://pubmed.ncbi.nlm.nih.gov/35023234/</li> <li>https://pubmed.ncbi.nlm.nih.gov/30258307/</li> </ul> </li> <li> <p>Second, as described in <code>Dropbox/now/writing ASL denoising paper/paper.md</code>, we could discuss ASL-fMRI of differential contrast. </p> </li> </ul>"},{"location":"links/","title":"links","text":""},{"location":"links/#links","title":"Links","text":"<p><code>2024-04-28</code></p> <ul> <li>machine learnng : build chat GPT</li> <li>machine learning: large language model</li> <li>3T scanner schedule</li> <li>Bernard Pras' work</li> <li>HPC at U of A</li> <li>codingrooms.com</li> </ul>"},{"location":"using_jupyterbook/","title":"using jupyterbook","text":"<p><code>2023-11-17</code></p> <p>I followed this tutorial to set up my jupyterbook. The highlights are:</p> <ol> <li>Everthing is located here: Dropbox/jupyterbook</li> <li>Using virtual environment:<ul> <li><code>python3 -m venv venv</code></li> <li><code>source venv/bin/activate</code></li> </ul> </li> <li>Installing python modules:<ul> <li><code>python -m pip install jupyter-book</code></li> </ul> </li> <li>Pin the dependence<ul> <li><code>python -m pip freeze &gt; requirements.txt</code></li> </ul> </li> <li>Create a new folder lipidMRI and organize the files there<ul> <li><code>jupyter-book create lipidMRI</code></li> <li>I then edited the automatically produced book configuration file _config.yml</li> <li>I then edited the automatically produced Table of Contents file _toc.yml . This is a YAML file with a collection of pages, each one linking to a file in the book.</li> <li>Book content: A collection of text files make up your book\u2019s content. These can be one of several types of files, such as markdown (<code>.md</code>) and Jupyter Notebooks (<code>.ipynb</code>), and MyST markdown (<code>.md</code>) that is discussed here. For example, <code>:::{note}</code> is a directive in MyST Markdown.</li> </ul> </li> <li>Now it\u2019s time to build outputs for the book, using the <code>jupyter-book build</code> command line tool for this.<ul> <li><code>jupyter-book build lipidMRI</code></li> </ul> </li> <li>To back up files and publish the book in github, following this<ul> <li><code>git init</code></li> <li><code>git remote add origin https://github.com/[user name]/lipidMRI.git</code></li> <li><code>git add .</code></li> <li><code>git commit -m \"Add documentation\"</code></li> <li><code>git push -u origin main</code> or using github Desktop to push</li> </ul> </li> <li>To host the book in readthedocs, I followed this link and added a .readthedocs.yml file.</li> </ol>"},{"location":"using_mkdocs/","title":"using mkdocs","text":"<p><code>2023-11-15</code></p> <p>I followed this real python webpage to set up my mkdocs. The highlights are:</p> <ol> <li>Everthing is located here: Dropbox/mkdocs</li> <li>Using virtual environment:<ul> <li><code>python3 -m venv venv</code></li> <li><code>source venv/bin/activate</code></li> </ul> </li> <li>Installing python modules:<ul> <li><code>python -m pip install mkdocs</code></li> <li><code>python -m pip install \"mkdocstrings[python]\"</code></li> <li><code>python -m pip install mkdocs-material</code></li> </ul> </li> <li>Pin the dependence<ul> <li><code>python -m pip freeze &gt; requirements.txt</code> (see here)</li> </ul> </li> <li>Create a new mkdocs folder notes and organize the files there<ul> <li><code>mkdocs new notes</code></li> <li>I then edited the automatically produced file mkdocs.yml</li> <li>In the future I could add more *md files to the docs folder and update the index.md</li> </ul> </li> <li>Start the live-reloading docs server<ul> <li><code>mkdocs serve</code></li> </ul> </li> <li>Optionally Build the documentation site<ul> <li><code>mkdocs build</code> </li> </ul> </li> <li>more information in mkdocs.org. Also Print help message and exit<ul> <li><code>mkdocs -h</code></li> </ul> </li> <li>To back up files in github: <ul> <li><code>git init</code></li> <li><code>git remote add origin https://github.com/nankueichen/notes.git</code></li> <li><code>git add .</code></li> <li><code>git commit -m \"Add documentation\"</code></li> <li><code>git branch -M main</code></li> <li><code>git push -u origin main</code> or using github Desktop to push</li> <li>Following these instructions I could add a github workflow. Afterward, in setting / Pages of the github folder, I change the Branch to gh-pages and location to /doc ; Afterward this site is up and running.</li> </ul> </li> </ol> <p>Try the math here \\(\\alpha\\), \\(\\gamma\\)</p>"}]}